<div class="w-32 h-32">
  <svg viewBox="-50 -50 100 100">
    <circle class="clock-face" r="48" />

    <!-- markers -->
    <template x-for="i in 12" :key="i">
      <g>
        <line class="major" y1="35" y2="45" :transform="`rotate(${30 * i * 5})`" />
        <template x-for="j in 4" :key="`${i}_${j}`">
          <line class="minor" y1="42" y2="45" :transform="`rotate(${6 * (i * 5 + j)})`" />
        </template>
      </g>
    </template>

    <!-- hour hand -->
    <line class="hour" y1="2" y2="-20" :transform="`rotate(${30 * hours + minutes / 2})`" />

    <!-- minute hand -->
    <line class="minute" y1="4" y2="-30" :transform="`rotate(${6 * minutes + seconds / 10})`" />

    <!-- second hand -->
    <g :transform="`rotate(${6 * seconds})`">
      <line class="second" y1="10" y2="-38" />
      <line class="second-counterweight" y1="10" y2="2" />
    </g>
  </svg>
</div>

<style>
  svg {
    width: 100%;
    height: 100%;
  }

  .clock-face {
    stroke: #333;
    fill: white;
  }

  .minor {
    stroke: #999;
    stroke-width: 0.5;
  }

  .major {
    stroke: #333;
    stroke-width: 1;
  }

  .hour {
    stroke: #333;
  }

  .minute {
    stroke: #666;
  }

  .second,
  .second-counterweight {
    stroke: rgb(180, 0, 0);
  }

  .second-counterweight {
    stroke-width: 3;
  }
</style>

<script>
  export default function () {
    const time = new Date()

    return {
      hours: time.getHours(),
      minutes: time.getMinutes(),
      seconds: time.getSeconds(),
      timer: 0,
      init() {
        this.timer = setInterval(() => {
          const date = new Date()
          this.hours = date.getHours()
          this.minutes = date.getMinutes()
          this.seconds = date.getSeconds()
        }, 999)
      },
      destroy() {
        clearInterval(this.timer)
      },
    }
  }
</script>
